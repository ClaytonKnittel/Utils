name: Build and Unit Test

on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Cache libcheck
      id: cache-libcheck
      uses: actions/cache@v2
      env:
        cache-name: libcheck
      with:
        path: check-0.15.2
        key: check-0.15.2-${{ runner.os }}
    - name: Download libcheck
      uses: actions/checkout@v2
      if: steps.cache-libcheck.outputs.cache-hit != 'true'
      with:
        repository: "libcheck/check"
        ref: "0.15.2"
        path: check-0.15.2
    - name: Build libcheck
      id: build-libcheck
      if: steps.cache-libcheck.outputs.cache-hit != 'true'
      working-directory: check-0.15.2
      run: |
        mkdir build && cd build
        cmake ..
        make
    - name: install libcheck
      working-directory: check-0.15.2/build
      run: |
        sudo make install
    - name: install ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y subunit
    - name: Check out Utils
      uses: actions/checkout@v2
      with:
        path: utils
        submodules: recursive
    - name: Initialize and Build
      working-directory: utils
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=RelWithDebugInfo -DENABLE_TESTING=ON
        make
    - name: Run Unit Tests
      working-directory: utils/build
      run: |
        make run_tests
